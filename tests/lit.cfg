# -*- coding: utf-8 -*-
#                     The LLVM Compiler Infrastructure
#
# This file is distributed under the University of Illinois Open Source
# License. See LICENSE.TXT for details.

import sys
import os
import os.path
import subprocess
import lit.util

this_dir = os.path.dirname(__file__)
project_dir = os.path.dirname(this_dir)
bin_dir = os.path.join(project_dir, 'bin')

config.name = 'scan-build'

config.test_format = lit.formats.ShTest()
config.test_exec_root = this_dir
config.test_source_root = this_dir

config.suffixes = ['.py']
config.excludes = ['Input']

config.substitutions.append(('%{python}', sys.executable))

config.environment['PATH'] = os.pathsep.join([bin_dir, os.environ['PATH']])


# check pep8 util is available
try:
    subprocess.call(['pep8', '--version'], stdout=subprocess.PIPE)
except:
    pass
else:
    config.available_features.add('pep8')

# classify os script language
is_windows = sys.platform in {'win32', 'cygwin'}
if is_windows:
    config.available_features.add('batch')
    config.suffixes.append('.bat')
else:
    config.available_features.add('shell')
    config.suffixes.append('.sh')

# check for library preload is available
sys.path.append(project_dir)
from libscanbuild.intercept import is_preload_disabled
if not is_preload_disabled(sys.platform):
    config.available_features.add('preload')